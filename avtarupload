 <?php 
  $user_id = get_current_user_id();
    $user_id = (int) $user_id;

    if(isset($_POST['profile-sub']) && !empty($_POST['profile-sub'])) {
        $user_name = ltrim($_POST['user_name']);
        $user_phone = $_POST['user_phone'] ?? '';
        $user_dis = $_POST['user_dis'] ?? '';
        $userFiles = $_FILES['user_image'] ?? '';
        $userfname = '';
        $userlname = '';
        if(!empty($user_name)){
            $userdata = explode(' ',$user_name);
            $userfname =  $userdata[0];
            $userlname =  $userdata[1];
        }
        update_user_meta($user_id,'first_name',$userfname);
        update_user_meta($user_id,'last_name',$userlname);
        update_user_meta($user_id,'des',$user_dis);
        update_user_meta($user_id,'user_phone',$user_phone);

        $file = $_FILES['user_image'];
        $allowed_types = array('image/jpeg', 'image/png', 'image/gif');
        $errorMessage = '';

        if(!empty($file) && isset($_FILES['user_image'])){
         
        if (!in_array($file['type'], $allowed_types) && !empty($file['type'])) {
            $errorMessage .= 'Invalid file type. Only JPEG, PNG, and GIF files are allowed.';
        }
        
        if(isset($_FILES["user_image"]["name"]) && !empty($_FILES["user_image"]["name"])){
           
        $upload = wp_upload_bits($_FILES["user_image"]["name"], null, file_get_contents($_FILES["user_image"]["tmp_name"]));
 
        
            $filename = $upload['file'];
            $wp_filetype = wp_check_filetype($filename, null);
            $attachment = array(
                'post_mime_type' => $wp_filetype['type'],
                'post_title' => sanitize_file_name($filename),
                'post_content' => '',
                'post_status' => 'inherit'
            );
 
            $attachment_id = wp_insert_attachment( $attachment, $filename);
            if ( ! is_wp_error( $attachment_id ) ) {
                require_once(ABSPATH . 'wp-admin/includes/image.php');
                $image_url = wp_get_attachment_url($attachment_id);

            }
            update_user_meta($user_id, 'avatar_url', $image_url);
        }
       
    }
    
    }
    ?>

<span class="for-email">Dodaj profilnu fotografiju</span>
		 <input type="file" id="fileInput" class="custom-file-input"  name="user_image" onchange="previewImage(event)">
		 <label for="fileInput" class="custom-file-label">Brzo postavljanje fajla </label>

<?php 

function custom_admin_avatar($avatar, $id_or_email, $size, $default, $alt) {
    // Check if $id_or_email is an email or an ID
    $user = false;
    if (is_numeric($id_or_email)) {
        $user_id = (int) $id_or_email;
        $user = get_userdata($user_id);
    } elseif (is_string($id_or_email) && is_email($id_or_email)) {
        $user = get_user_by('email', $id_or_email);
    }

    if ($user) {
        // Get custom avatar URL from user meta
        $custom_avatar_url = get_user_meta($user->ID, 'avatar_url', true);
        if ($custom_avatar_url) {
            $avatar = "<img alt='{$alt}' src='{$custom_avatar_url}' class='avatar avatar-{$size} photo' height='{$size}' width='{$size}' />";
        }
    }

    return $avatar;
}
add_filter('get_avatar', 'custom_admin_avatar', 10, 5);

function custom_avatar_url($avatar_url, $id_or_email, $args) {
    $user = false;
    if (is_numeric($id_or_email)) {
        $user_id = (int) $id_or_email;
        $user = get_userdata($user_id);
    } elseif (is_string($id_or_email) && is_email($id_or_email)) {
        $user = get_user_by('email', $id_or_email);
    }

    if ($user) {
        $custom_avatar_url = get_user_meta($user->ID, 'avatar_url', true);
        if ($custom_avatar_url) {
            return $custom_avatar_url;
        }
    }
    return $avatar_url;
}
add_filter('get_avatar_url', 'custom_avatar_url', 10, 3);
test